
using auth_server.Infrastructure;
using Microsoft.AspNet.Identity.EntityFramework;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;

namespace auth_server.Infrastructure
{
    //IdentityDBContext just like the DBContext class is responsible for communicating with the database. the create method returns a new instance of the class
    public class ApplicationDbContext : IdentityDbContext<IdentityUser>
    {
        public ApplicationDbContext()
            : base("DefaultConnection", throwIfV1Schema: false)
        {
            Configuration.ProxyCreationEnabled = false;
            Configuration.LazyLoadingEnabled = false;
        }

        public DbSet<Audience> Audiences { get; set; }
        public DbSet<RefreshToken> RefreshTokens { get; set; }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder builder)

        {
            base.OnModelCreating(builder);
            //rename default tables names generated by identity
            builder.Entity<IdentityUser>().ToTable("Users");
            //rename default tables names generated by identity
            builder.Entity<IdentityUser>().ToTable("Users");
            builder.Entity<IdentityUserClaim>().ToTable("UserClaims");
            builder.Entity<IdentityUserRole>().ToTable("UserRoles");
            builder.Entity<IdentityUserLogin>().ToTable("UserLogins");
            builder.Entity<IdentityRole>().ToTable("Roles");
        }

            public static ApplicationDbContext Create()
        {
            return new ApplicationDbContext();
        }

    }
}